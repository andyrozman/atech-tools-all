<?xml version="1.0" ?>
<project name="ATechTools" default="build" basedir=".">
    <description>
        Build file for Atech Tools
    </description>

    <!-- Environment properties read from a file ...-->
    
    <property file="./AtechToolsBuild.properties"/>
    <property file="./AtechToolsVersion.properties"/>

    <!--
atech-tools.version
-->

    <!-- These should *not* be modified on the command line! -->

    <property name="tools.dir" value="tools"/>
    <property name="message.description.file" value="message.txt"/>


    <property name="compile.dir" value="./classes" />
    <property name="src.dir" value="../src" />
    <property name="jars.dir" value="./jars" />
    <property name="lang.dir" value="../lang" />

    <property name="output.help-topics.dir" value="${output.classes.dir}/help_topics/backup"/>

    <property name="debug" value="true"/>
<!--
    ${src.dir}
    ${hibernate.all.classpath.dir}
    ${run.dir}
    
    ${build.dir}   for full build
    ${java.home}
                                                      
    ${full.classpath.def}    

java -classpath java -classpath .;%LIB_DIR%/skinlf.jar;%LIB_DIR%/itext-1.2.jar;%LIB_JDBC%/mysql-jconn-3_1_7.jar;%LIB_JDBC%/postgresql-8.0-311.jdbc3.jar;%LIB_HIB%/asm.jar;%LIB_HIB%/asm-attrs.jar;%LIB_HIB%/c3p0-0.8.5.2.jar;%LIB_HIB%/cglib-2.1.jar;%LIB_HIB%/commons-collections-2.1.1.jar;%LIB_HIB%/commons-logging-1.0.4.jar;%LIB_HIB%/dom4j-1.6.jar;%LIB_HIB%/hibernate3.jar;%LIB_HIB%/jaxen-1.1-beta-4.jar;%LIB_HIB%/jdbc2_0-stdext.jar;%LIB_HIB%/jta.jar;%LIB_HIB%/log4j-1.2.9.jar;%LIB_HIB%/ehcache-1.1.jar;%LIB_HIB%/commons-lang-2.0.jar;%LIB_HIB%/antlr-2.7.5H3.jar;%LIB_DIR%/jhall.jar com.atech.inf_sys.zis.ui.ZISMain

-->

    

    <target name="build">
        <echo message="   ************************************************* "/>
        <echo message="   ****            Atech Tools Build              **** "/>
        <echo message="   ************************************************* "/>
        <echo message=""/>
        <echo message="     compile = compile"/>
        <echo message="     clean = clean"/>
        <echo message="     jar = build and make jar"/>
        <echo message="     jar_startup = build and make startup jar"/>
        <echo message="     jar_clean = rebuild (clean,jar)"/>
        <echo message="     deploy = copies to all needed application directories (jar)"/>
        <echo message=""/>
        <echo message="     "/>
        <echo message=""/>
    </target>


    <!-- Public targets -->

    <target name="compile" >
        <mkdir dir="${compile.dir}"/>
        <javac srcdir="${src.dir}"
                destdir="${compile.dir}"
                deprecation="on" debug="${debug}">
            <classpath>
                <pathelement path="${full.classpath.def}"/>
            </classpath>
        </javac>
    </target>


    <target name="clean" description="Clean .class files from run dir">
        <delete dir="${compile.dir}/com"/>
        <delete dir="${compile.dir}/org"/>
    </target>


    <target  name="jar" depends="compile" description="Make jar file and compile">
        <mkdir dir="${jars.dir}"/>
        <jar jarfile="${jars.dir}/atech-tools-${atech-tools.version}.jar"
             update="false" 
             index="false">
            <fileset dir="${src.dir}">
                <include name="licences/**"/>
                <include name="icons/**"/>
            </fileset>
            <fileset dir="${compile.dir}">
                <include name="com/**"/>
                <include name="org/**"/>
            </fileset>
            <fileset dir="${lang.dir}">
                <include name="**"/>
            </fileset>
        </jar>
    </target>


    <target  name="jar_startup" depends="compile" description="Make jar file and compile">
        <mkdir dir="${jars.dir}"/>
        <jar jarfile="${jars.dir}/atech-tools-startup-${atech-tools-startup.version}.jar"
             update="false" 
             index="false">
            <fileset dir="${compile.dir}">
                <include name="com/atech/update/config/**"/>
                <include name="com/atech/update/startup/**"/>
            </fileset>
        </jar>
    </target>
	
	
	
    <target name="deploy" depends="jar">
<!-- x        <echo message="Copy to My_Projects/GNUGlucoCenter/ggc"/> 
        <copy file="${jars.dir}/atech-tools-${atech-tools.version}.jar" todir="d:/My_Projects/GNUGlucoCenter/ggc/lib/utils"/>
        <echo message="Copy to My_Projects/PIS/ZIS"/> 
        <copy file="${jars.dir}/atech-tools-${atech-tools.version}.jar" todir="d:/My_Projects/PIS/ZIS/lib/utils"/> -->
<!--        <echo message="Copy to My_Projects/PIS"/>
        <copy file="${jars.dir}/atech-tools-${atech-tools.version}.jar" todir="d:/My_Projects/PIS/lib/utils"/> -->
<!-- x       <echo message="Copy to /PIS"/> 
        <copy file="${jars.dir}/atech-tools-${atech-tools.version}.jar" todir="d:/PIS/lib/utils"/>
        <echo message="Copy to My_Projects/PIS/PIS_misc/build"/> 
        <copy file="${jars.dir}/atech-tools-${atech-tools.version}.jar" todir="d:/My_Projects/PIS/PIS_misc/build/root/lib/utils"/>
        <echo message="Copy to PIS Ant Build directory"/> 
        <copy file="${jars.dir}/atech-tools-${atech-tools.version}.jar" todir="d:/Projects_SVN/PIS/trunk/PIS/src/build/jars"/> -->
<!--        <echo message="Copy to Elicpse/GGC Meter directory"/> 
        <copy file="${jars.dir}/atech-tools-${atech-tools.version}.jar" todir="d:/My_Projects/Eclipse/GGC Meter Tool/lib"/>
        <echo message="Copy to Elicpse/GGC Gluco Control directory"/> 
        <copy file="${jars.dir}/atech-tools-${atech-tools.version}.jar" todir="d:/My_Projects/Eclipse/GNU Gluco Control/lib"/> -->
<!-- x        <echo message="Copy to Elicpse libs directory"/> 
        <mkdir dir="d:/java/libs/atech-tools-${atech-tools.version}" />
        <copy file="${jars.dir}/atech-tools-${atech-tools.version}.jar" todir="d:/java/libs/atech-tools-${atech-tools.version}/"/>
        <echo message="Copy to ggc-support libs directory"/> 
        <copy file="${jars.dir}/atech-tools-${atech-tools.version}.jar" todir="d:/Projects_SVN/ggc/trunk/ggc-support/lib/utils/"/>
        <echo message="Copy to My_Projects/GNUGlucoCenter/ggc Main"/> 
        <copy file="${jars.dir}/atech-tools-${atech-tools.version}.jar" todir="d:/My_Projects/GNUGlucoCenter/ggc/build/classes"/>
        <echo message="Copy to GGC Usb"/> 
        <copy file="${jars.dir}/atech-tools-${atech-tools.version}.jar" todir="d:/GGC_Usb/packed/GNU_Gluco_Control/lib/utils"/>  -->

    
        <echo message="Copy to Elicpse libs directory"/> 
        <mkdir dir="${root.dir}/java/libs/atech-tools-${atech-tools.version}" />
    	<copy file="${jars.dir}/atech-tools-${atech-tools.version}.jar" todir="${root.dir}/java/libs/atech-tools-${atech-tools.version}/"/>
    	        
    	<echo message="Copy to ggc-support libs directory"/> 
    	<copy file="${jars.dir}/atech-tools-${atech-tools.version}.jar" todir="${root.dir}/Projects_SVN/ggc/trunk/ggc-support/lib/utils/"/>
        <echo message="Copy to GGC Usb"/> 
        <copy file="${jars.dir}/atech-tools-${atech-tools.version}.jar" todir="${root.dir}/GGC_Usb/packed/GNU_Gluco_Control/lib/utils"/>  
    
    </target>




    <target name="run" >
        <java classname="com.atech.inf_sys.zis.ui.ZISMain"
              failonerror="true"
              classpath= "${java.home}/lib/rt.jar:${full.classpath.def}"
              fork="true">
        </java>
    </target>




    <target name="rebuild" depends="clean, compile" />





    <!-- Private targets -->


    <target  name="compile_full" depends="clean" description="Compile all FFNetTaker classes">
        <mkdir dir="${build.dir}"/>
        <javac srcdir="${source.dir}"
            destdir="${build.dir}"
            deprecation="on" debug="${debug}">
        </javac>
    </target>

</project>

